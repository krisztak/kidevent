version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: kidevent_dev
      POSTGRES_USER: kidevent_user
      POSTGRES_PASSWORD: kidevent_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kidevent_user -d kidevent_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (optional but recommended)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://kidevent_user:kidevent_password@postgres:5432/kidevent_dev
      - PORT=5000
      - SESSION_SECRET=dev-session-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3000,http://localhost:5000
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
      - "3000:3000"  # Vite dev server
    volumes:
      - .:/app:cached
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        npm run db:push &&
        echo 'Starting development server...' &&
        npm run dev
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: kidevent_network